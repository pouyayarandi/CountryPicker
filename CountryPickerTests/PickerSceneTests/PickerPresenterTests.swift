//
//  PickerPresenterTests.swift
//  CountryPicker
//
//  Created by Pouya Yarandi on 11/6/20.
//  Copyright (c) 2020 RoundTable. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import CountryPicker
import XCTest

class PickerPresenterTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: PickerPresenter!
    var worker: CountrySelectorWorker!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        setupPickerPresenter()
        setupSelectorWorker()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupPickerPresenter() {
        sut = PickerPresenter()
    }
    
    func setupSelectorWorker() {
        worker = CountrySelectorWorker()
    }
    
    // MARK: Test doubles
    
    class PickerDisplayLogicSpy: PickerDisplayLogic {
        var countOfSelectedCountries = 0
        
        func updateCountriesTable(with countries: [Picker.Country.ViewModel]) {
            countOfSelectedCountries = countries.filter({ $0.isAdded }).count
        }
    }
    
    // MARK: Tests
    
    func testPresentAddedCountries() {
        // Given
        let spy = PickerDisplayLogicSpy()
        sut.viewController = spy
        let countries = [
            Picker.Country.Response(id: "IRN", name: "Iran"),
            Picker.Country.Response(id: "AUS", name: "Australia")
        ]
        
        // When
        worker.addCountry(id: "IRN")
        sut.presentCountries(countries: countries, selectorWorker: worker)
        
        // Then
        XCTAssertEqual(spy.countOfSelectedCountries, 1)
    }
}
